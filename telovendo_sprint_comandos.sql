-- MySQL Script generated by MySQL Workbench
-- Mon Aug  8 10:20:27 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema telovendo_sprint
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `telovendo_sprint` ;

-- -----------------------------------------------------
-- Schema telovendo_sprint
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `telovendo_sprint` DEFAULT CHARACTER SET utf8 ;
USE `telovendo_sprint` ;

-- -----------------------------------------------------
-- Table `telovendo_sprint`.`proveedores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `telovendo_sprint`.`proveedores` ;

CREATE TABLE IF NOT EXISTS `telovendo_sprint`.`proveedores` (
  `idproveedores` INT NOT NULL,
  `representante` VARCHAR(45) NOT NULL,
  `nombre_corporativo` VARCHAR(45) NOT NULL,
  `telefono1` VARCHAR(12) NOT NULL,
  `telefono2` VARCHAR(12) NOT NULL,
  `nombre_atiende` VARCHAR(45) NOT NULL,
  `categoria` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idproveedores`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `telovendo_sprint`.`clientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `telovendo_sprint`.`clientes` ;

CREATE TABLE IF NOT EXISTS `telovendo_sprint`.`clientes` (
  `idclientes` INT NOT NULL,
  `nombres` VARCHAR(24) NOT NULL,
  `apellidos` VARCHAR(24) NOT NULL,
  `direccion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idclientes`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `telovendo_sprint`.`productos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `telovendo_sprint`.`productos` ;

CREATE TABLE IF NOT EXISTS `telovendo_sprint`.`productos` (
  `idproductos` INT NOT NULL,
  `precio` INT NOT NULL,
  `categoria` VARCHAR(45) NOT NULL,
  `color` VARCHAR(12) NOT NULL,
  `stock` INT NOT NULL,
  `proveedores_idproveedores` INT NOT NULL,
  PRIMARY KEY (`idproductos`, `proveedores_idproveedores`),
  INDEX `fk_productos_proveedores_idx` (`proveedores_idproveedores` ASC) VISIBLE,
  CONSTRAINT `fk_productos_proveedores`
    FOREIGN KEY (`proveedores_idproveedores`)
    REFERENCES `telovendo_sprint`.`proveedores` (`idproveedores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


use telovendo_sprint;

-- Agregue 5 proveedores a la base de datos
insert into proveedores values (1,"Rolando Piñones","Doguito","+56999999999","+56999999998","Rolito","Alimentos","rolito@doguito.cl");
insert into proveedores values (2,"Jimena Aliaga","IRT","+56999999997","+56999999996","Claudia","Electronica","jimena@irt.cl");
insert into proveedores values (3,"Yolanda Araya","LoMismo","+56999999995","+56999999994","Yolito","Perfumeria","yolito@lomismo.cl");
insert into proveedores values (4,"Jonathan Castro","ElectroBay","+56999999993","+56999999992","Nicholas","Electronica","jo@electrobay.cl");
insert into proveedores values (5,"Alejandro Cofre","Imation","+56999999991","+56999999990","Chisai","Computacion","ale@imation.cl");
select * from proveedores;

-- nos piden que ingresemos solo 5 clientes
INSERT INTO clientes VALUES (1, "Rolando","Cabrera", "Bustamante 23");
INSERT INTO clientes VALUES (2, "Susana","Martínez", "Hurtado 1123");
INSERT INTO clientes VALUES (3, "Javier","Poblete" , "Guayaquil 150");
INSERT INTO clientes VALUES (4, "Catalina","Guerra", "Guacolda 444");
INSERT INTO clientes VALUES (5, "Sebastián","Yatra", "5 Oriente 66");
select * from clientes;

-- Ingrese 10 productos y su respectivo stock.
INSERT INTO productos VALUES ( 1, 50000,"Alimentos"  ,"rojo",   20, 1 );
INSERT INTO productos VALUES ( 2, 26990,"Perfumeria" ,"azul",   30, 3 );
INSERT INTO productos VALUES ( 3, 60000,"Computacion","rojo",   25, 5 );
INSERT INTO productos VALUES ( 4, 69990,"Electronica","cafe",   35, 2 );
INSERT INTO productos VALUES ( 5, 21999,"Electronica","negro",  36, 2 );
INSERT INTO productos VALUES ( 6, 15399,"Perfumeria" ,"blanco", 45, 3 );
INSERT INTO productos VALUES ( 7, 12990,"Alimentos"  ,"rojo",   55, 3 );
INSERT INTO productos VALUES ( 8, 19660,"Electronica","verde",  12, 4 );
INSERT INTO productos VALUES ( 9, 49990,"Electronica","azul",   32, 4 );
INSERT INTO productos VALUES (10, 74999,"Electronica","verde",  21, 2 );
select * from productos;

-- Cuál es la categoría de productos que más se repite.
select categoria, count(*) from productos
group by categoria
order by count(*) desc limit 1;

-- Cuáles son los productos con mayor stock
select * from productos order by stock desc limit 3;


-- Qué color de producto es más común en nuestra tienda.
select color, count(*) from productos
group by color
order by count(*) desc limit 1;

-- Cual o cuales son los proveedores con menor stock de productos.
select * from proveedores where (idproveedores = (select proveedores_idproveedores from productos group by proveedores_idproveedores order by sum(stock) limit 1) );

-- Cambien la categoría de productos más popular por ‘Electrónica y computación’.
-- PASO 1: Identificar cuál es la categoría más popular y guardarla en una variable
select @categ_popular := categoria from productos
group by categoria
order by count(*) desc limit 1;

-- PASO 2: Cambiar la categoría "Electronica" por "Electronica y computacion"
update productos set categoria = "Electronica y computacion"
	where categoria = @categ_popular  and  idproductos > 0;
select * from productos;



